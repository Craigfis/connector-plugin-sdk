<results>
  <test name='REGEXP_MATCH(&quot;abc&quot;, &quot;abc&quot;) //true'>
    <sql>
      SELECT (&apos;abc&apos; ~ &apos;abc&apos;) AS &quot;TEMP(Test)(1791381358)(0)&quot;&#10;FROM &quot;Calcs&quot;&#10;HAVING (COUNT(1) &gt; 0)&#10;    </sql>
    <query-time>
      48.000&#10;    </query-time>
    <table>
      <schema>
        <column>[cast_calcs.postgres].[TEMP(Test)(1791381358)(0)]</column>
      </schema>
      <tuple>
        <value>true</value>
      </tuple>
    </table>
  </test>
  <test name='REGEXP_MATCH(&quot;ABC&quot;, &quot;z&quot;) //false'>
    <sql>
      SELECT (&apos;ABC&apos; ~ &apos;z&apos;) AS &quot;TEMP(Test)(527576710)(0)&quot;&#10;FROM &quot;Calcs&quot;&#10;HAVING (COUNT(1) &gt; 0)&#10;    </sql>
    <query-time>
      52.000&#10;    </query-time>
    <table>
      <schema>
        <column>[cast_calcs.postgres].[TEMP(Test)(527576710)(0)]</column>
      </schema>
      <tuple>
        <value>false</value>
      </tuple>
    </table>
  </test>
  <test name='REGEXP_MATCH(&quot;toyota&quot;, &quot;0&quot;) //false'>
    <sql>
      SELECT (&apos;toyota&apos; ~ &apos;0&apos;) AS &quot;TEMP(Test)(3849557534)(0)&quot;&#10;FROM &quot;Calcs&quot;&#10;HAVING (COUNT(1) &gt; 0)&#10;    </sql>
    <query-time>
      54.000&#10;    </query-time>
    <table>
      <schema>
        <column>[cast_calcs.postgres].[TEMP(Test)(3849557534)(0)]</column>
      </schema>
      <tuple>
        <value>false</value>
      </tuple>
    </table>
  </test>
  <test name='REGEXP_MATCH(&quot;aaaaaaaaa&quot;, &quot;a{3}&quot;) //true'>
    <sql>
      SELECT (&apos;aaaaaaaaa&apos; ~ &apos;a{3}&apos;) AS &quot;TEMP(Test)(70303919)(0)&quot;&#10;FROM &quot;Calcs&quot;&#10;HAVING (COUNT(1) &gt; 0)&#10;    </sql>
    <query-time>
      51.000&#10;    </query-time>
    <table>
      <schema>
        <column>[cast_calcs.postgres].[TEMP(Test)(70303919)(0)]</column>
      </schema>
      <tuple>
        <value>true</value>
      </tuple>
    </table>
  </test>
  <test name='REGEXP_MATCH(&quot;aaaa&quot;, &quot;a{3}&quot;) //true'>
    <sql>
      SELECT (&apos;aaaa&apos; ~ &apos;a{3}&apos;) AS &quot;TEMP(Test)(2572059327)(0)&quot;&#10;FROM &quot;Calcs&quot;&#10;HAVING (COUNT(1) &gt; 0)&#10;    </sql>
    <query-time>
      51.000&#10;    </query-time>
    <table>
      <schema>
        <column>[cast_calcs.postgres].[TEMP(Test)(2572059327)(0)]</column>
      </schema>
      <tuple>
        <value>true</value>
      </tuple>
    </table>
  </test>
  <test name='REGEXP_MATCH(&quot;abcdefghijklmnopqrstuvwxyz0123456789&quot;, &quot;[a-z0-9]&quot;) //true'>
    <sql>
      SELECT (&apos;abcdefghijklmnopqrstuvwxyz0123456789&apos; ~ &apos;[a-z0-9]&apos;) AS &quot;TEMP(Test)(1998184482)(0)&quot;&#10;FROM &quot;Calcs&quot;&#10;HAVING (COUNT(1) &gt; 0)&#10;    </sql>
    <query-time>
      58.000&#10;    </query-time>
    <table>
      <schema>
        <column>[cast_calcs.postgres].[TEMP(Test)(1998184482)(0)]</column>
      </schema>
      <tuple>
        <value>true</value>
      </tuple>
    </table>
  </test>
  <test name='REGEXP_MATCH(&quot;Abcd&quot;, &quot;^a&quot;) //false'>
    <sql>
      SELECT (&apos;Abcd&apos; ~ &apos;^a&apos;) AS &quot;TEMP(Test)(2177503973)(0)&quot;&#10;FROM &quot;Calcs&quot;&#10;HAVING (COUNT(1) &gt; 0)&#10;    </sql>
    <query-time>
      52.000&#10;    </query-time>
    <table>
      <schema>
        <column>[cast_calcs.postgres].[TEMP(Test)(2177503973)(0)]</column>
      </schema>
      <tuple>
        <value>false</value>
      </tuple>
    </table>
  </test>
  <test name='REGEXP_MATCH(&quot;Abcd&quot;, &quot;^A&quot;) //true'>
    <sql>
      SELECT (&apos;Abcd&apos; ~ &apos;^A&apos;) AS &quot;TEMP(Test)(2056972566)(0)&quot;&#10;FROM &quot;Calcs&quot;&#10;HAVING (COUNT(1) &gt; 0)&#10;    </sql>
    <query-time>
      51.000&#10;    </query-time>
    <table>
      <schema>
        <column>[cast_calcs.postgres].[TEMP(Test)(2056972566)(0)]</column>
      </schema>
      <tuple>
        <value>true</value>
      </tuple>
    </table>
  </test>
  <test name='REGEXP_MATCH(&quot;abcd&quot;, &quot;(a|b)&quot;) //true'>
    <sql>
      SELECT (&apos;abcd&apos; ~ &apos;(a|b)&apos;) AS &quot;TEMP(Test)(1412071578)(0)&quot;&#10;FROM &quot;Calcs&quot;&#10;HAVING (COUNT(1) &gt; 0)&#10;    </sql>
    <query-time>
      71.000&#10;    </query-time>
    <table>
      <schema>
        <column>[cast_calcs.postgres].[TEMP(Test)(1412071578)(0)]</column>
      </schema>
      <tuple>
        <value>true</value>
      </tuple>
    </table>
  </test>
  <test name='REGEXP_MATCH(&quot;brooklyn&quot;, &quot;o{1,2}&quot;) //true'>
    <sql>
      SELECT (&apos;brooklyn&apos; ~ &apos;o{1,2}&apos;) AS &quot;TEMP(Test)(4042911571)(0)&quot;&#10;FROM &quot;Calcs&quot;&#10;HAVING (COUNT(1) &gt; 0)&#10;    </sql>
    <query-time>
      52.000&#10;    </query-time>
    <table>
      <schema>
        <column>[cast_calcs.postgres].[TEMP(Test)(4042911571)(0)]</column>
      </schema>
      <tuple>
        <value>true</value>
      </tuple>
    </table>
  </test>
  <test name='REGEXP_MATCH(&quot;orange brooklyn&quot;, &quot;o{1,2}&quot;) //true'>
    <sql>
      SELECT (&apos;orange brooklyn&apos; ~ &apos;o{1,2}&apos;) AS &quot;TEMP(Test)(1929015565)(0)&quot;&#10;FROM &quot;Calcs&quot;&#10;HAVING (COUNT(1) &gt; 0)&#10;    </sql>
    <query-time>
      57.000&#10;    </query-time>
    <table>
      <schema>
        <column>[cast_calcs.postgres].[TEMP(Test)(1929015565)(0)]</column>
      </schema>
      <tuple>
        <value>true</value>
      </tuple>
    </table>
  </test>
  <test name='REGEXP_MATCH(&quot;abcde&quot;, &quot;e$&quot;) //true'>
    <sql>
      SELECT (&apos;abcde&apos; ~ &apos;e$&apos;) AS &quot;TEMP(Test)(2705341318)(0)&quot;&#10;FROM &quot;Calcs&quot;&#10;HAVING (COUNT(1) &gt; 0)&#10;    </sql>
    <query-time>
      54.000&#10;    </query-time>
    <table>
      <schema>
        <column>[cast_calcs.postgres].[TEMP(Test)(2705341318)(0)]</column>
      </schema>
      <tuple>
        <value>true</value>
      </tuple>
    </table>
  </test>
  <test name='REGEXP_MATCH(&quot;Cincinnati Outlaw Reds&quot;, &quot;[a-zA-Z]&quot;) //true'>
    <sql>
      SELECT (&apos;Cincinnati Outlaw Reds&apos; ~ &apos;[a-zA-Z]&apos;) AS &quot;TEMP(Test)(3629216594)(0)&quot;&#10;FROM &quot;Calcs&quot;&#10;HAVING (COUNT(1) &gt; 0)&#10;    </sql>
    <query-time>
      57.000&#10;    </query-time>
    <table>
      <schema>
        <column>[cast_calcs.postgres].[TEMP(Test)(3629216594)(0)]</column>
      </schema>
      <tuple>
        <value>true</value>
      </tuple>
    </table>
  </test>
  <test name='REGEXP_MATCH(&quot;Altoona bear cub&quot;, &quot;[^abc]&quot;) //true'>
    <sql>
      SELECT (&apos;Altoona bear cub&apos; ~ &apos;[^abc]&apos;) AS &quot;TEMP(Test)(3781051258)(0)&quot;&#10;FROM &quot;Calcs&quot;&#10;HAVING (COUNT(1) &gt; 0)&#10;    </sql>
    <query-time>
      52.000&#10;    </query-time>
    <table>
      <schema>
        <column>[cast_calcs.postgres].[TEMP(Test)(3781051258)(0)]</column>
      </schema>
      <tuple>
        <value>true</value>
      </tuple>
    </table>
  </test>
  <test name='REGEXP_MATCH(&quot;1-425-609-7808&quot;, &quot;\d&quot;) //true'>
    <sql>
      SELECT (&apos;1-425-609-7808&apos; ~ E&apos;\\d&apos;) AS &quot;TEMP(Test)(3665932149)(0)&quot;&#10;FROM &quot;Calcs&quot;&#10;HAVING (COUNT(1) &gt; 0)&#10;    </sql>
    <query-time>
      52.000&#10;    </query-time>
    <table>
      <schema>
        <column>[cast_calcs.postgres].[TEMP(Test)(3665932149)(0)]</column>
      </schema>
      <tuple>
        <value>true</value>
      </tuple>
    </table>
  </test>
  <test name='REGEXP_MATCH(&quot;I called the number 4255671912 but got no response. Then I e-mailed support@xyz.com on 11/10/2015&quot;, &quot;([a-z]*@[a-z]*[.][a-z]*)(\s.[a-z])&quot;) //true'>
    <sql>
      SELECT (&apos;I called the number 4255671912 but got no response. Then I e-mailed support@xyz.com on 11/10/2015&apos; ~ E&apos;([a-z]*@[a-z]*[.][a-z]*)(\\s.[a-z])&apos;) AS &quot;TEMP(Test)(483764994)(0)&quot;&#10;FROM &quot;Calcs&quot;&#10;HAVING (COUNT(1) &gt; 0)&#10;    </sql>
    <query-time>
      61.000&#10;    </query-time>
    <table>
      <schema>
        <column>[cast_calcs.postgres].[TEMP(Test)(483764994)(0)]</column>
      </schema>
      <tuple>
        <value>true</value>
      </tuple>
    </table>
  </test>
  <test name='REGEXP_MATCH(&apos;abc123ed567&apos;,&apos;([a-z]*)&apos;) //true'>
    <sql>
      SELECT (&apos;abc123ed567&apos; ~ &apos;([a-z]*)&apos;) AS &quot;TEMP(Test)(4186547846)(0)&quot;&#10;FROM &quot;Calcs&quot;&#10;HAVING (COUNT(1) &gt; 0)&#10;    </sql>
    <query-time>
      50.000&#10;    </query-time>
    <table>
      <schema>
        <column>[cast_calcs.postgres].[TEMP(Test)(4186547846)(0)]</column>
      </schema>
      <tuple>
        <value>true</value>
      </tuple>
    </table>
  </test>
  <test name='REGEXP_MATCH(&apos;abc123ed567&apos;,&apos;[a-z]*&apos;) //true'>
    <sql>
      SELECT (&apos;abc123ed567&apos; ~ &apos;[a-z]*&apos;) AS &quot;TEMP(Test)(2880800836)(0)&quot;&#10;FROM &quot;Calcs&quot;&#10;HAVING (COUNT(1) &gt; 0)&#10;    </sql>
    <query-time>
      53.000&#10;    </query-time>
    <table>
      <schema>
        <column>[cast_calcs.postgres].[TEMP(Test)(2880800836)(0)]</column>
      </schema>
      <tuple>
        <value>true</value>
      </tuple>
    </table>
  </test>
  <test name='REGEXP_MATCH(&apos;abc123ed567&apos;,&apos;[1-9]{3}[a-z]{3}&apos;) //false'>
    <sql>
      SELECT (&apos;abc123ed567&apos; ~ &apos;[1-9]{3}[a-z]{3}&apos;) AS &quot;TEMP(Test)(1371196421)(0)&quot;&#10;FROM &quot;Calcs&quot;&#10;HAVING (COUNT(1) &gt; 0)&#10;    </sql>
    <query-time>
      51.000&#10;    </query-time>
    <table>
      <schema>
        <column>[cast_calcs.postgres].[TEMP(Test)(1371196421)(0)]</column>
      </schema>
      <tuple>
        <value>false</value>
      </tuple>
    </table>
  </test>
</results>